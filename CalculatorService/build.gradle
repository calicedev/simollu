plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.11'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.simollu'
version = '1.0'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.7")
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'

	// web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// jpa
	implementation 'mysql:mysql-connector-java:8.0.28'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// eureka client
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	// spring cloud config
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'

	// actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator'


	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	// implementation 'redis.clients:jedis:3.7.0'

	// JSON 문자열 -> 객체 변환을 위해 Jackson 라이브러리 추가
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.3'

	// LocalDateTime 타입의 값을 직렬화
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'


	// logger
	implementation 'org.slf4j:slf4j-api:1.7.32'
	implementation 'ch.qos.logback:logback-classic:1.2.6'

	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
